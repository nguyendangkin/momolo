services:
  db:
    image: postgres:16.9
    restart: always
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_DATABASE}
    container_name: boilerplate-postgres
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    ports:
      - '${DB_PORT}:5432'
    networks:
      - boilerplate-net
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: boilerplate-app
    environment:
      - PORT=${PORT}
    ports:
      - '${PORT}:${PORT}'
    depends_on:
      - db
    volumes:
      - ./src:/app/src
    networks:
      - boilerplate-net
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8080/healthCheck']
      interval: 10s
      timeout: 5s
      retries: 3

  pgadmin:
    image: dpage/pgadmin4:8.5
    restart: always
    container_name: boilerplate-pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
    ports:
      - '${PGADMIN_HOST_PORT}:${PGADMIN_CONTAINER_PORT}'
    depends_on:
      - db
    networks:
      - boilerplate-net

  # redis:
  #   image: redis:alpine
  #   container_name: boilerplate-redis
  #   ports:
  #     - '${REDIS_PORT}:${REDIS_PORT}'
  #   restart: always
  #   networks:
  #     - boilerplate-net
  #   healthcheck:
  #     test: ['CMD', 'redis-cli', 'ping']
  #     interval: 10s
  #     timeout: 5s
  #     retries: 3

networks:
  boilerplate-net:
    driver: bridge